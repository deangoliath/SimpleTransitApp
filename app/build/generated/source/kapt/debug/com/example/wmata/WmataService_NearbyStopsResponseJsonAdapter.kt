// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "UNUSED_PARAMETER", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN", "IMPLICIT_NOTHING_TYPE_ARGUMENT_IN_RETURN_POSITION")

package com.example.wmata

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.Types
import com.squareup.moshi.`internal`.Util
import java.lang.NullPointerException
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.List
import kotlin.collections.emptySet
import kotlin.text.buildString

public class WmataService_NearbyStopsResponseJsonAdapter(
  moshi: Moshi,
) : JsonAdapter<WmataService.NearbyStopsResponse>() {
  private val options: JsonReader.Options = JsonReader.Options.of("Stops")

  private val listOfStopAdapter: JsonAdapter<List<WmataService.Stop>> =
      moshi.adapter(Types.newParameterizedType(List::class.java, WmataService.Stop::class.java),
      emptySet(), "stops")

  public override fun toString(): String = buildString(54) {
      append("GeneratedJsonAdapter(").append("WmataService.NearbyStopsResponse").append(')') }

  public override fun fromJson(reader: JsonReader): WmataService.NearbyStopsResponse {
    var stops: List<WmataService.Stop>? = null
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> stops = listOfStopAdapter.fromJson(reader) ?: throw Util.unexpectedNull("stops",
            "Stops", reader)
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    return WmataService.NearbyStopsResponse(
        stops = stops ?: throw Util.missingProperty("stops", "Stops", reader)
    )
  }

  public override fun toJson(writer: JsonWriter, value_: WmataService.NearbyStopsResponse?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("Stops")
    listOfStopAdapter.toJson(writer, value_.stops)
    writer.endObject()
  }
}
